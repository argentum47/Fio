//=Display & Flow
// display, visibility, float, clear
// 
//=Positioning
// position, top, right, bottom, left, z-index
// 
//=Dimensions
// width (min, max), height (min, max), overflow
// 
//=Margins, Padding, Borders, Outline
// margin (top, right, bottom, left), padding (top, right, bottom, left), 
// border (top, right, bottom, left), border-width, border-style, 
// border-color, outline, list-style
// 
//=Typographic Styles
// font, font-family, font-size, line-height, font-weight, text-align, 
// text-indent, text-transform, text-decoration, letter-spacing, word-spacing, 
// white-space, vertical-align, color
// 
//=Backgrounds
// background, background-color, background-image, background-repeat, 
// background-position
// 
//=Opacity, Cursors, Generated Content
// opacity, cursor, content, quotes
// 
// 
//=Font weights:
// 100: Ultra Light
// 200: Thin
// 300: Light
// 400: Regular
// 500: Semi Bold
// 600: Bold
// 700: Extra Bold
// 800: Heavy
// 900: Ultra Heavy
// 
//=Use hyphenation for selectors; use underscores for variables.

//=RESET
//========================================================
* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

input {
	font-family: $main_font;
	background-color: transparent;
	border: 0;
	outline: 0;
	cursor: pointer;
}

// Override .pure-g letter-spacing to work with monospaced fonts
//.pure-g { letter-spacing: -.71em; }

//=HELPERS
//=========================================================
// These are global classes that can be reused everywhere 
// to aid with more elementary structure or design elements

// This is a column
.c {
	display: block;
	float: left;
}

// This wraps to center
.cw {
	@include center-wrapper($page_width);
}

//=BASE
//=========================================================
// Classes to define the base structure of the page

$page_frame_w: 0px;

.totals {
	position: fixed;
	top: 0;
	width: 100%;
	height: 50px;
	padding: $page_frame_w $page_frame_w 0 $page_frame_w;
	z-index: 2;
}

.module {
	overflow: hidden;
	margin: (50px + $page_frame_w) $page_frame_w $page_frame_w $page_frame_w;
}

section {
	@extend %uncollapse;
}

//=========================================================

body {
	font: 300 1em/1.5em $main_font;
	color: $dd_gray;
}

.page-frame {
	span {
		display: block;
		position: fixed;
		background-color: $d_gray;
		z-index: 5;
	}
	.top, .bottom {
		width: 100%;
		height: $page_frame_w;
	}
	.left, .right {
		height: 100%;
		width: $page_frame_w;
	}
	.top, .left {
		top: 0;
		left: 0
	}
	.bottom, .right {
		bottom: 0;
		right: 0;
	}
}

.totals {
	border-bottom: 1px solid $d_gray;
	background-color: $white;
}

// Entries ================================================

input::-webkit-inner-spin-button,
input::-webkit-calendar-picker-indicator {
    display: none;
    -webkit-appearance: none;
}
$date_w: 0.15 * $page_width;
$amount_w: 0.1 * $page_width;
$amount_p: 0.05 * $page_width;
$category_w: 0.25 * $page_width;
$note_w: 0.45 * $page_width;

$entries_fs: em(15px);
$entries_lh: em(27px, $entries_fs);
$month_height: em(30px, $entries_fs);
$block_spacing: em(20px, $entries_fs);

.c {
	display: block;
	overflow: hidden;
	float: left;
	white-space: nowrap;

	&.date { width: $date_w; input {text-align: center}}
	&.amt { width: $amount_w; margin-right: $amount_p; }
	&.category { width: $category_w; }
	&.note { width: $note_w; }
	&.full { width: 100%; }
}

.daily-totals {
	@extend %uncollapse;
	line-height: $entries_lh;
	.amt {
		float: none;
		margin-left: $date_w;
	}
}

.entries {
	@extend %uncollapse;
	.amt, .amt input {
		text-align: right;
	}
}

.entry {
	@extend %uncollapse;
	position: relative;
	line-height: $entries_lh;
	@include transition(line-height 0.2s);
	// This makes ends of lines blurry so we know there's more to see
	&:not(.editing) .note {
		position: relative;
		&:after {	
			content: '';
			display: block;
			position: absolute;
			top: 0;
			right: 0;
			height: 100%;
			width: em(20px, $entries_fs);
			@include background-image(linear-gradient(90deg, rgba($white, 0) 0%, $white 100%));
		}
	}
	&.editing { 
		line-height: 2 * $entries_lh;
		background-color: $d_gray;
		z-index: 1;
		@include transition(line-height 0.2s);
		.amt {
			margin-left: 0;
		}
		.remove { display: block; }
	}
	// This is the separator between entries and totals
	&.last:not(.editing) .amt { border-bottom: 2px dotted $gray; }	
	&.losing-interest {
		line-height: 2 * $entries_lh;
	}
	&.removing {
		line-height: 0;
		@include transition-property (line-height);
		@include transition-duration(0.2s);
		@include transition-delay(0.1s);
		& > * {
			opacity: 0;
			@include transition(opacity 0.2s)
		}
	}
	.amt { margin-left: $date_w; }
	.c { cursor: pointer; }
	input {
		width: 100%;
		padding: em(5px, $entries_fs);
		color: $white;
	}
	.remove {
		display: none;
		position: absolute;
		top: 0;
		@include calcu(right, "(100% - #{$page_width}) / 2 + #{$page_width}");
		padding: 0 em($entries_lh, $entries_fs);
		font-size: em(17px, $entries_fs);
		text-align: center;
		color: $white;
		cursor: pointer;
		&:hover {
			background-color: darken($d_gray, 5%);
		}
	}
}

.errors {
	@extend %uncollapse;
	line-height: normal;
	white-space: normal;
	.error {
		height: 0; // Make sure hidden when no error
		overflow: hidden;
		line-height: 0;
		@include transition(height, 0.2s);
		&.active {
			height: auto;
			line-height: em(30px, $entries_fs);
			color: $white;

			// Color each error group a slightly lighter bg
			@for $i from 1 through 3 {
				&:nth-child(#{$i}) {
					$bg_color: lighten(desaturate($vintage_red, 40%), 
						               percentage(($i - 1) / 20));
					background-color: $bg_color;
				}
			} // For each

		} // .active
	} // .error
} // .errors

.module-io {
	font-size: $entries_fs;
	background-color: $white;
}

.timeline-block {
	@extend %uncollapse;
	position: relative;
	padding-top: $block_spacing;
	padding-bottom: $block_spacing;
	margin-bottom: 2px; // This is so the dotted line stays nice
	height: auto;
	@include transition(height 0.2s);
	// This draws the timeline
	&:before {
		content: '';
		display: block;
		position: absolute;
		top: 0;
		width: 2px;
		height: 100%;
		border-right: 2px dotted $gray;
		@include calcu(left, "((100% - #{$page_width}) / 2) + (#{$date_w} / 2)")
	}
	&.empty, &.empty.with-month {
		height: 100px;
		@include transition(height 0.2s ease 0.1s);
		.timeline-date {
			opacity: 0;
			@include transition(opacity 0.2s ease 0.1s);
		}
		//height: 0;
		overflow: hidden;
		margin: 0;
		padding: 0;
		line-height: 0;
	}
	&.with-month {
		// When we also display the month, we need extra space for
		// 2 * $block_spacing for the space between the month and the date 
		// 1 * $block_spacing for the space above the month
		// $month_height for the actual month. 
		// .timeline_date is subsequently pushed down exactly that amount.
		padding-top: (3 * $block_spacing) + $month_height;
		.timeline-date { top: (3 * $block_spacing) + $month_height; }
		.timeline-month { display: block; }
	}
}

.timeline-date, 
.timeline-month {
	position: absolute;
	top: $block_spacing;
	width: $date_w;
	text-align: center;
	background-color: $white;
	z-index: 1; 	// Get out of the way of the entry hover
	@include calcu(left, "(100% - #{$page_width}) / 2");
	.date {
		display: block;
		font-size: em(26px, $entries_fs);
	}
	.day {
		font-style: italic;
	}
}

.timeline-month {
	display: none;
	height: $month_height;
	font-weight: 700;
	font-variant: small-caps;
	text-transform: lowercase;
	line-height: $month_height;
}
